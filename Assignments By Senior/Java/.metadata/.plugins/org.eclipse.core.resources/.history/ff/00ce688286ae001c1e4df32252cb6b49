//Table Structure
//CREATE TABLE Student(
//StudentID     NUMBER GENERATED BY DEFAULT AS IDENTITY CONSTRAINT PK_STUDENT_SID primary key,
//StudentName   VARCHAR2(50),
//Email   VARCHAR(20),
//AdmissionDate Date,
//StudyingClass VARCHAR(10),
//City VARCHAR(30)
//);

package com.mastek.assignment;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
//import java.sql.Date;
import java.util.Scanner;

public class StudentDatabase {
	private static Connection connection=null;
	private static Scanner sc=new Scanner(System.in);
	public static void main(String[] args) {
		String url = "jdbc:oracle:thin:@//localhost:1521/xe";
		String user = "c##aduser";
		String password = "root";
		
		StudentDatabase student=new StudentDatabase();
		try {
			connection = DriverManager.getConnection(url, user, password);
			System.out.println("Enter your choice : ");
			System.out.println("1. Insert or Create Record");
			System.out.println("2. Update Record");
			System.out.println("3. Delete Record");
			System.out.println("4. View Record");
			System.out.println("5. Exit");
			int choice=Integer.parseInt(sc.nextLine());
			switch(choice) {
			case 1:
				student.insertRecord();
				break;
			case 2:
				student.updateRecord();
				break;
			case 3:
				student.deleteRecord();
				break;
			case 4:
				student.viewRecord();
				break;
			case 5:
				//student.insertRecord();
				break;
			default :
				break;
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	private void insertRecord() throws SQLException {
		String sqlQuery="INSERT INTO Student(StudentName, Email, AdmissionDate, StudyingClass, City) VALUES(?,?,to_date(?,'dd-mm-yyyy'),?,?)";
//		String sqlQuery="INSERT INTO Student(StudentName, Email, AdmissionDate, StudyingClass, City) VALUES('Raj','raj@gmail.com',TO_DATE('1999-05-29','yyyy-mm-dd'),'Class-8','Jaipur')";
		PreparedStatement pst=connection.prepareStatement(sqlQuery);
//		pst.setString(1, "Pragati");
//		pst.setString(2, "pragati@gmail.com");
//		pst.setDate(3, Date.valueOf("1998-1-17"));
//		pst.setString(4, "Class-9");
//		pst.setString(5, "Delhi");
		
		System.out.println("Enter Name : ");
		pst.setString(1, sc.nextLine());
		System.out.println("Enter Email : ");
		pst.setString(2, sc.nextLine());
		System.out.println("Enter Admission Date : ");
		pst.setString(3, sc.nextLine());
		System.out.println("Enter Class : ");
		pst.setString(4, sc.nextLine());
		System.out.println("Enter City : ");
		pst.setString(5, sc.nextLine());
		
		int rows = pst.executeUpdate();
		if(rows>0) {
			System.out.println("Record Inserted successfully");
		}
	}
	public void updateRecord() {
		System.out.println("Inside update record ");
	}
	
	public void deleteRecord() {
		System.out.println("Inside delete record ");
	}
	
	public void viewRecord() throws SQLException {
		
		System.out.println("Enter your choice to view records : ");
		System.out.println("1. View All Records");
		System.out.println("2. Search & View Record by Student ID ");
		System.out.println("3. Search & View Record by Student Name ");
		int choice=Integer.parseInt(sc.nextLine());
		switch(choice) {
		case 1:
			String sqlQuery= "SELECT * FROM Student";
			PreparedStatement pst=connection.prepareStatement(sqlQuery);
			ResultSet result = pst.executeQuery(sqlQuery);
			System.out.println("ID | NAME | EMAIL | Admission Date | Class | City");
			
			if(result.next()) {
				System.out.println(result.getInt("StudentID")+" | "+result.getString("StudentName")+" | "+result.getString("Email")+" | "+result.getString("AdmissionDate")+" | "+result.getString("StudyingClass")+" | "+result.getString("City"));
			} else {
				System.out.println("No records found..");
			}
			break;
		case 2:
			System.out.println("Enter the Student ID to view the records : ");
			int studentID = Integer.parseInt(sc.nextLine());
			String sqlQuery1= "SELECT * FROM Student Where StudentID = "+studentID;
			PreparedStatement pst1=connection.prepareStatement(sqlQuery1);
			ResultSet result1 =  pst1.executeQuery(sqlQuery1);
			System.out.println("ID | NAME | EMAIL | Admission Date | Class | City");
			
			if(result1.next()) {
				System.out.println(result1.getInt("StudentID")+" | "+result1.getString("StudentName")+" | "+result1.getString("Email")+" | "+result1.getString("AdmissionDate")+" | "+result1.getString("StudyingClass")+" | "+result1.getString("City"));
			} else {
				System.out.println("No records found..");
			}
			break;
		case 3:
			System.out.println("Enter the Student Name to view the records : ");
			String studentName = sc.nextLine();
			String sqlQuery2= "SELECT * FROM Student Where StudentName = ?";
			PreparedStatement pst2=connection.prepareStatement(sqlQuery2);
			pst2.setString(1, studentName);
			ResultSet result2 =  pst2.executeQuery(sqlQuery2);
			System.out.println("ID | NAME | EMAIL | Admission Date | Class | City");
			
			if(result2.next()) {
				System.out.println(result2.getInt("StudentID")+" | "+result2.getString("StudentName")+" | "+result2.getString("Email")+" | "+result2.getString("AdmissionDate")+" | "+result2.getString("StudyingClass")+" | "+result2.getString("City"));
			} else {
				System.out.println("No records found..");
			}
			break;
		default :
			break;
		}
	}
}
